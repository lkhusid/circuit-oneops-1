#!/bin/bash
#
# chkconfig: - 85 15
# description: The Platform Server
#
# processname: enterprise-server
#
#
### BEGIN INIT INFO
# Provides: enterprise-server
# Required-Start: $network $syslog
# Required-Stop: $network $syslog
# Default-Start:
# Default-Stop:
# Description: Enterprise Server Service
# Short-Description: start stop restart status enterprise-server
### END INIT INFO

. /etc/rc.d/init.d/functions

unset ISBOOT
if [ "${NAME:0:1}" = "S" -o "${NAME:0:1}" = "K" ]; then
    NAME="${NAME:3}"
    ISBOOT="1"
fi

# For SELinux we need to use 'runuser' not 'su'
if [ -x "/sbin/runuser" ]; then
    SU="/sbin/runuser -s /bin/sh"
else
    SU="/bin/su -s /bin/sh"
fi

RETVAL=0

setup() {
	echo -n "Setting up Enterprise Server Environment"
	. <%= node['enterprise_server']['install_root_dir'] %>/enterprise-server/bin/setenv.sh
	[ -d "$CATALINA_HOME" ] || { echo "Tomcat requires $CATALINA_HOME."; exit 1; }
	echo "Setup Complete"
}

#Update the permissions on the log directory, when service is getting started as
#root directly from ES Root, it changes catalina.out ownership
validate() {
  echo -n "Permissions update for logging directory"
  chown -R $TOMCAT_USER:$TOMCAT_GROUP $LOGFILES_PATH
}

start() {
  validate
  if $SU $TOMCAT_USER bash -c "$CATALINA_HOME/bin/startup.sh"; then
    echo "Enterprise Server started successfully"
  else
    echo "Error: $1: $?"
  fi
}

stop() {
  if $SU $TOMCAT_USER bash -c "$CATALINA_HOME/bin/shutdown.sh"; then
    read kpid < "$CATALINA_PID"
    if ps --pid $kpid 2>&1 1>/dev/null; then
      kill -9 ${kpid}
    fi
    unset kpid
    echo "Enterprise Server stopped successfully"
    rm -f $CATALINA_PID
  else
    echo "Error: $1 : $?"
  fi
}


case $1 in
  start)
    echo "Starting Enterprise Server"
	  setup
    start
    ;;
  stop)
    echo "Stopping Enterprise Server"
	  setup
    stop
    ;;
  restart)
  	echo "Restarting Enterprise Server"
	  setup
    stop
    start
    ;;
  status)
    setup
    if [ -f "$CATALINA_PID" ]; then
      read kpid < "$CATALINA_PID"
      if ps --pid $kpid 2>&1 1>/dev/null; then
        echo "$0 is already running at ${kpid}"
      else
        echo "$CATALINA_PID found, but $kpid is not running"
      fi
      unset kpid
    else
      echo "$0 is stopped"
    fi
    ;;
  *)
    echo -n "Usage: $0 { start | stop | restart | status }"
    RETVAL=1
esac
exit $RETVAL
